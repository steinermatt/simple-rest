<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.nwcloud.demo</groupId>
	<artifactId>springrest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>

		<!-- Properties that hold host and port of proxy should you have one - 
			otherwise remove all occurrences of the properties -->
		<proxy.host>${env.PROXY_HOST}</proxy.host>
		<proxy.port>${env.PROXY_PORT}</proxy.port>

		<!-- Properties that hold information on the location and version of the 
			SAP NetWeaver Cloud SDK -->
		<nw.cloud.sdk.path>${env.HOME}/dev/neo-sdk-1.7.0</nw.cloud.sdk.path> 
		<nw.cloud.sdk.version>1.7.0</nw.cloud.sdk.version>

		<!-- Property that holds supported JDK version for the given SAP NetWeaver 
			Cloud SDK -->
		<nw.cloud.jdk.version>1.6</nw.cloud.jdk.version>

		<!-- Properties that hold information on your SAP NetWeaver Cloud account -->
		<nw.cloud.host>netweaver.ondemand.com</nw.cloud.host>
		<nw.cloud.account>${env.NW_CLOUD_ACCOUNT}</nw.cloud.account>
		<nw.cloud.username>${env.NW_CLOUD_USERNAME}</nw.cloud.username>
		<nw.cloud.password>${env.NW_CLOUD_PASSWORD}</nw.cloud.password>
		<nw.cloud.application>sample</nw.cloud.application>

		<!-- Properties that hold the local server information required for local 
			integration-testing -->
		<local.server.root>${project.build.directory}/server</local.server.root>
		<local.server.host>localhost</local.server.host>
		<local.server.console.port>9003</local.server.console.port>
		<local.server.jmx.port>9004</local.server.jmx.port>
		<local.server.http.port>9080</local.server.http.port>
		<local.server.https.port>9443</local.server.https.port>
		<local.server.ajp.port>9009</local.server.ajp.port>

		<!-- Property setting source encoding to UTF-8 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<cxf.version>2.6.1</cxf.version>
		<spring.version>3.1.2.RELEASE</spring.version>
	</properties>

	<repositories>
		<repository>
			<id>central</id>
			<name>Maven Central Repository</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>

		<!-- Required for compilation and provided at runtime (SAP NetWeaver SDK 
			API libraries) -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-bundle-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.jettison</groupId>
			<artifactId>jettison</artifactId>
			<version>1.3.2</version>
			<exclusions>
				<exclusion>
					<groupId>stax</groupId>
					<artifactId>stax-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>net.java.dev.rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>jdom</groupId>
			<artifactId>jdom</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>net.htmlparser.jericho</groupId>
			<artifactId>jericho-html</artifactId>
			<version>3.2</version>
		</dependency>

		<dependency>
			<groupId>com.cybozu.labs</groupId>
			<artifactId>langdetect</artifactId>
			<version>1.1-20120112</version>
		</dependency>

	</dependencies>

	<build>
		<!-- Map the Eclipse file system layout to the Maven plug-ins -->
		<sourceDirectory>${project.basedir}/src</sourceDirectory>
		<testSourceDirectory>${project.basedir}/test</testSourceDirectory>
		<outputDirectory>${project.basedir}/war/WEB-INF/classes</outputDirectory>
		<testOutputDirectory>${project.basedir}/bin/classes</testOutputDirectory>
		<resources>
			<resource>
				<directory>${project.basedir}/src</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>${project.basedir}/test</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</testResource>
		</testResources>

		<plugins>
			<!-- Map the Eclipse file system layout to the Maven plug-ins -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<warName>${project.artifactId}</warName>
					<warSourceDirectory>WebContent</warSourceDirectory>
					<archive>
						<manifestFile>WebContent/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>

			<!-- Set compiler to officially supported JDK version for the given SAP 
				NetWeaver Cloud SDK -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${nw.cloud.jdk.version}</source>
					<target>${nw.cloud.jdk.version}</target>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>

			<!-- Include only unit tests for maven-surefire-plugin that is run in 
				test phase -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<excludes>
						<exclude>**/integrationtest/**/*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/test/**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Include only integration tests for maven-failsafe-plugin that is 
				run in integration-test phase -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<excludes>
						<exclude>**/test/**/*Test.java</exclude>
					</excludes>
					<includes>
						<include>**/integrationtest/**/*Test.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Enforce officially supported JDK and validated Maven version for 
				the given SAP NetWeaver Cloud SDK or higher -->
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[${nw.cloud.jdk.version},2.0)</version>
								</requireJavaVersion>
								<requireMavenVersion>
									<version>[3.0.3, 4.0.0)</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- Force m2e to ignore plugin goal that it doesn't support naturally -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-enforcer-plugin
										</artifactId>
										<versionRange>
											[0.0.1,)
										</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- Activate compiler warnings when matching JDK is present (compiler 
			then doesn't generate bootstrap warnings) -->
		<profile>
			<id>compiler-warnings</id>
			<activation>
				<activeByDefault>false</activeByDefault>
				<jdk>1.6</jdk>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>2.5.1</version>
						<configuration>
							<compilerArguments>
								<Werror />
							</compilerArguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>